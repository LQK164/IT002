#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
class PhanSo
{
    int tu;
    int mau;

public:
    PhanSo() {}
    PhanSo(int tu, int mau)
    {
        this->tu = tu;
        this->mau = mau;
    }
    int gcd(int a, int b) { return (b == 0) ? a : gcd(b, a % b); }
    void Nhap()
    {
        cin >> this->tu;
        int m;
        do
        {
            cin >> m;
        } while (!m);
        this->mau = m;
    }
    void LamTron()
    {
        int a = gcd(abs(this->tu), abs(this->mau));
        this->tu /= a;
        this->mau /= a;
        if (this->mau < 0)
        {
            this->tu *= -1;
            this->mau *= -1;
        }
    }
    void Xuat()
    {
        LamTron();
        cout << this->tu << '/' << this->mau << endl;
    }
    void Cong(PhanSo b)
    {
        this->tu = this->mau * b.tu + this->tu * b.mau;
        this->mau = this->mau * b.mau;
    }
    void Tru(PhanSo b)
    {
        this->tu = this->tu * b.mau - this->mau * b.tu;
        this->mau = this->mau * b.mau;
    }
    void Nhan(PhanSo b)
    {
        this->tu = this->tu * b.tu;
        this->mau = this->mau * b.mau;
    }
    void Chia(PhanSo b)
    {
        this->tu = this->tu * b.mau;
        this->mau = this->mau * b.tu;
    }
};
int main()
{
    PhanSo a, b;
    a.Nhap();
    b.Nhap();
    PhanSo t = a;
    t.Cong(b);
    t.Xuat();
    t = a;
    t.Tru(b);
    t.Xuat();
    t = a;  
    t.Nhan(b);
    t.Xuat();
    t = a;
    t.Chia(b);
    t.Xuat();
    t = a;
    return 0;
}
